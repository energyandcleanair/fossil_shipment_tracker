name: "Engine: Full test and deploy"

on:
  push:
    branches:
      - "master"
    paths:
      - "Dockerfile.engine"
      - "cloudbuild-engine.yaml"
      - "engine/**"
      - "base/**"
      - ".github/workflows/engine-workflow.yml"
  workflow_dispatch:

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  ENVIRONMENT: ${{ vars.ENVIRONMENT }}

  PYTHON_VERSION: 3.9
  POETRY_VERSION: 1.8.2
  POETRY_PLUGIN_EXPORT_VERSION: 1.8.0

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_URL_PRODUCTION: ${{ secrets.DB_URL_PRODUCTION }}

      PGHOST_PRODUCTION: ${{ secrets.PGHOST_PRODUCTION }}
      PGPORT_PRODUCTION: ${{ secrets.PGPORT_PRODUCTION }}
      PGUSER_PRODUCTION: ${{ secrets.PGUSER_PRODUCTION }}
      PGPASSWORD_PRODUCTION: ${{ secrets.PGPASSWORD_PRODUCTION }}

      KEY_MARINETRAFFIC_EV01: ${{ secrets.KEY_MARINETRAFFIC_EV01 }}
      KEY_MARINETRAFFIC_VI01: ${{ secrets.KEY_MARINETRAFFIC_VI01 }}
      KEY_MARINETRAFFIC_VD02: ${{ secrets.KEY_MARINETRAFFIC_VD02 }}
      KEY_MARINETRAFFIC_EV02: ${{ secrets.KEY_MARINETRAFFIC_EV02 }}
      KEY_MARINETRAFFIC_PS01: ${{ secrets.KEY_MARINETRAFFIC_PS01 }}
      KEY_MARINETRAFFIC_EV01_CALL_BASED: ${{ secrets.KEY_MARINETRAFFIC_EV01_CALL_BASED }}

      KEY_DATALASTIC: ${{ secrets.KEY_DATALASTIC }}

      EQUASIS_USERNAME_PATTERN: ${{ secrets.EQUASIS_USERNAME_PATTERN }}
      EQUASIS_PASSWORD: ${{ secrets.EQUASIS_PASSWORD }}
      EQUASIS_ACCOUNT_RANGE_START: ${{ vars.EQUASIS_ACCOUNT_RANGE_START }}
      EQUASIS_ACCOUNT_RANGE_END: ${{ vars.EQUASIS_ACCOUNT_RANGE_END }}

      KPLER_EMAIL: ${{ secrets.KPLER_EMAIL }}
      KPLER_PASSWORD: ${{ secrets.KPLER_PASSWORD }}
      KPLER_OTP_KEY: ${{ secrets.KPLER_OTP_KEY }}

      RECEIVER_EMAIL_USERNAME: ${{ secrets.RECEIVER_EMAIL_USERNAME }}
      RECEIVER_EMAIL_PASSWORD: ${{ secrets.RECEIVER_EMAIL_PASSWORD }}
      RECEIVER_EMAIL_POP_SERVER: pop.gmail.com
      RECEIVER_EMAIL_POP_PORT: "995"
      RECEIVER_EMAIL_POP_SECURE: "true"

      AZCAPTCHA_API_KEY: ${{ secrets.AZCAPTCHA_API_KEY }}

      COMTRADE_API_KEY: ${{ secrets.COMTRADE_TEST_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Poetry ${{ env.POETRY_VERSION }}
        uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Setup Poetry export plugin
        working-directory: api
        run: |
          poetry self add poetry-plugin-export@${{ env.POETRY_PLUGIN_EXPORT_VERSION }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: poetry install
        working-directory: ./engine

      - name: Run unit tests
        working-directory: ./engine
        run: poetry run pytest -c ./tests/pytest-unit.ini -v

      - name: Run integration tests
        working-directory: ./engine
        run: poetry run pytest -c ./tests/pytest-integration.ini -v

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Authenticate
        id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"
      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v1"
      - name: Build and deploy latest docker image
        id: build-and-deploy-image
        run: "gcloud builds submit --region=europe-west1 --config cloudbuild-engine.yaml"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Authenticate
        id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"
      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v1"
      - name: Deploy latest job specs
        id: deploy-job-spec
        run: |
          gcloud run jobs replace infra/jobs/engine.yaml
          gcloud run jobs replace infra/jobs/engine-big.yaml
